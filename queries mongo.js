QUERIES

1-- db.Restaurant.find().pretty()
2-- db.Restaurant.find({},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
3-- db.Restaurant.find({},{restaurant_id:1, name:1, borough:1, cuisine:1, _id:0}).pretty()
4-- db.Restaurant.find({},{restaurant_id:1, name:1, borough:1, 'address.zipcode':1, _id:0}).pretty()
5-- db.Restaurant.find({borough:'Bronx'}).pretty()
6-- db.Restaurant.find({borough:'Bronx'}).limit(5).pretty()
7-- db.Restaurant.find({borough:'Bronx'}).skip(5).limit(5).pretty()
8-- db.Restaurant.find({'grades.score':{'$gt':90}}).pretty()
9-- db.Restaurant.find({$and:[{'grades.score':{$gt:80}},{'grades.score':{$lt:100}}]}).pretty()
db.Restaurant.find({'grades.score':{$gt:80,$lt:100}}).pretty() --> implicit AND
10-- db.Restaurant.find({'address.coord.0': {$lt: -95.754168}}).pretty()
11--db.Restaurant.find({cuisine:{$ne:"American"},"grades.score":{$gt:70},"address.coord.1":{$lt:-65.754168}}).pretty()
12-- db.Restaurant.find({cuisine:{$ne:"American"},"grades.score":{$gt:70},"address.coord.0":{$lt:-65.754168}}).pretty()
13-- db.Restaurant.find({cuisine:{$ne:'American'}, 'grades.grade':"A", borough:{$ne:'Brooklyn'}}).sort({cuisine:-1}).pretty()
14-- db.Restaurant.find({name:{$regex:/^Wil/}},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
15-- db.Restaurant.find({name:{$regex:/ces$/}},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
16-- db.Restaurant.find({name:{$regex:/Reg/}},{restaurant_id:1, name:1, borough:1, cuisine:1})
17-- db.Restaurant.find({borough: 'Bronx', cuisine: {$in: ['American', 'Chinese']}}).pretty()
18-- db.Restaurant.find({borough:{$in:['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
19-- db.Restaurant.find({borough:{$nin:['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
20-- db.Restaurant.find({grades: {$elemMatch: {score: {$in: [3, 4]}}}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}).pretty()
21-- 
db.Restaurant.find({cuisine: 'Seafood', cuisine: {$nin: ['American', 'Chinese']},$or:[{name: {$regex: /^Wil/}}]}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}).pretty()

db.Restaurant.find({$or:[{cuisine:'Seafood', cuisine:{$nin:['American','Chinese']}},{name:{$regex:/^Wil/}}]},{restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find({ $or: [ { "name": { $regex: /^Wil/i } }, { "cuisine": "Seafood", "cuisine": { $nin: ["American", "Chinese"] } } ]},{ "restaurant_id": 1,"name": 1, "borough": 1, "cuisine": 1, "_id": 0})
22-- db.Restaurant.find({grades:{$elemMatch:{grade:'A',score:11,date:ISODate('2014-08-11T00:00:00Z')}}},{restaurant_id:1, name:1, grades:1}).pretty()
23-- db.Restaurant.find({'grades.1':{grade:'A',score:9,date:ISODate('2014-08-11T00:00:00Z')}},{restaurant_id:1, name:1, grades:1}).pretty()
24-- db.Restaurant.find({'address.coord.1':{$gt:42,$lte:52}},{restaurant_id:1, name:1, address:1}).pretty()
25-- db.Restaurant.find().sort({name:1}).pretty()
26-- db.Restaurant.find().sort({name:-1}).pretty()
27-- db.Restaurant.find().sort({cuisine:1, borough:-1}).pretty()
28-- db.Restaurant.find({'address.street':{$exists:true}}).count() == db.Restaurant.find().count()
29-- db.Restaurant.find({'address.coord':{$type: 'double'}}).pretty()
30-- db.Restaurant.find({'grades.score':{$mod:[7,0]}},{restaurant_id:1, name:1, 'grades.grade':1}).pretty()
31-- db.Restaurant.find({name:/mon/},{name:1, borough:1, 'address.coord':1, cuisine:1}).pretty()
32-- db.Restaurant.find({name:/^Mad/},{name:1, borough:1, 'address.coord':1, cuisine:1}).pretty()
